---
source: cookiecluster/src/cli.rs
expression: rendered
---
/*
## Neuron K8s Device Plugin

The Neuron K8s device plugin, https://awsdocs-neuron.readthedocs-hosted.com/en/latest/containers/tutorials/k8s-setup.html,
will need to  be installed in the cluster in order to mount and utilize the Neuron devices
in your pods. Add the following node selector and toleration to your device plugin Daemonset
values to ensure the device plugin runs on nodes that have Neuron devices present
(as identified via the MNG label and taint provided below):

```yaml
nodeSelector:
  vpc.amazonaws.com/efa.present: 'true'
tolerations:
  - key: aws.amazon.com/neuron
    operator: Exists
    effect: NoSchedule
```

The Neuron K8s device plugin Helm chart support can be tracked in the following two GitHub issues:
- https://github.com/aws/eks-charts/issues/1068
- https://github.com/aws-neuron/aws-neuron-sdk/issues/707
*/
################################################################################
# EKS Cluster
################################################################################

module "eks" {
  source  = "terraform-aws-modules/eks/aws"
  version = "~> 20.31"

  cluster_name    = "example"
  cluster_version = "1.31"

  # These will become the default in the next major version of the module

  bootstrap_self_managed_addons   = false
  enable_irsa                     = false
  enable_security_groups_for_pods = false

  cluster_addons = {
    coredns = {}
    eks-pod-identity-agent = {}
    kube-proxy = {}
    vpc-cni = {
      pod_identity_role_arn = [{
        role_arn        = module.vpc_cni_pod_identity.iam_role_arn
        service_account = "aws-node"
      }]
    }
  }

  vpc_id                   = data.aws_vpc.this.id
  control_plane_subnet_ids = data.aws_subnets.control_plane.ids
  subnet_ids               = data.aws_subnets.data_plane.ids

  cluster_zonal_shift_config = {
    enabled = true
  }

  eks_managed_node_groups = {
    # This node group is for core addons such as CoreDNS
    default = {
      ami_type = "AL2023_x86_64_STANDARD"
      instance_types = [
        "m7a.xlarge",
        "m7i.xlarge",
      ]
  
      min_size     = 2
      max_size     = 3
      desired_size = 2
    }
    neuron = {
      ami_type = "AL2023_x86_64_NEURON"
      instance_types = [
        "trn1.32xlarge",
      ]

      min_size     = 2
      max_size     = 5
      desired_size = 2

        cloudinit_pre_nodeadm = [
          {
            content_type = "application/node.eks.aws"
            content      = <<-EOT
              ---
              apiVersion: node.eks.aws/v1alpha1
              kind: NodeConfig
              spec:
                instance:
                  localStorage:
                    strategy: RAID0
            EOT
          }
        ]

      labels = {
      }
    
      taints = {
        # Ensure only Neuron workloads are scheduled on this node group
        neuron = {
          key    = "aws.amazon.com/neuron"
          value  = "true"
          effect = "NO_SCHEDULE"
        }
      }

      # Capacity reservations are restricted to a single availability zone
      subnet_ids = data.aws_subnets.data_plane_reservation.ids

      # ML capacity block reservation
      capacity_type = "CAPACITY_BLOCK"
      instance_market_options = {
        market_type = "capacity-block"
      }
      capacity_reservation_specification = {
        capacity_reservation_target = {
          capacity_reservation_id = var.capacity_reservation_id
        }
      }
    }
  }

  tags = module.tags.tags
}

################################################################################
# EKS Pod Identity IAM Roles
################################################################################

module "vpc_cni_pod_identity" {
  source = "terraform-aws-modules/eks-pod-identity/aws"
  version = "~> 1.7"

  name = "vpc-cni"

  attach_aws_vpc_cni_policy = true
  aws_vpc_cni_enable_ipv4   = true

  tags = module.tags.tags
}
