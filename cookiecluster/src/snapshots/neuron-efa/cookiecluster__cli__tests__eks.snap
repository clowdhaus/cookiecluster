---
source: cookiecluster/src/cli.rs
expression: rendered
---
/*
## Neuron K8s Device Plugin

The Neuron K8s device plugin, https://awsdocs-neuron.readthedocs-hosted.com/en/latest/containers/tutorials/k8s-setup.html,
will need to  be installed in the cluster in order to mount and utilize the Neuron devices
in your pods. Add the following node selector and toleration to your device plugin Daemonset
values to ensure the device plugin runs on nodes that have Neuron devices present
(as identified via the MNG label and taint provided below):

```yaml
nodeSelector:
  vpc.amazonaws.com/efa.present: 'true'
tolerations:
  - key: aws.amazon.com/neuron
    operator: Exists
    effect: NoSchedule
```

The Neuron K8s device plugin Helm chart support can be tracked in the following two GitHub issues:
- https://github.com/aws/eks-charts/issues/1068
- https://github.com/aws-neuron/aws-neuron-sdk/issues/707

## EFA K8s Device Plugin

The EFA K8s device plugin, https://github.com/aws/eks-charts/tree/master/stable/aws-efa-k8s-device-plugin,
will need to be installed in the cluster in order to mount and utilize the EFA devices
in your pods. Add the following node selector and toleration to your device plugin Helm chart
values to ensure the device plugin runs on nodes that have EFA devices present
(as identified via the MNG label and taint provided below):

```yaml
nodeSelector:
  vpc.amazonaws.com/efa.present: 'true'
tolerations:
  - key: aws.amazon.com/neuron
    operator: Exists
    effect: NoSchedule
```
*/
################################################################################
# EKS Cluster
################################################################################

module "eks" {
  source  = "terraform-aws-modules/eks/aws"
  version = "~> 20.34"

  cluster_name    = "example"
  cluster_version = "1.32"

  # These will become the default in the next major version of the module
  bootstrap_self_managed_addons   = false
  enable_irsa                     = false
  enable_security_groups_for_pods = false

  cluster_addons = {
    coredns = {}
    kube-proxy = {}
    eks-node-monitoring-agent = {}
    eks-pod-identity-agent = {}
    vpc-cni = {}
  }

  # Add security group rules on the node group security group to
  # allow EFA traffic
  enable_efa_support = true

  vpc_id                   = data.aws_vpc.this.id
  control_plane_subnet_ids = data.aws_subnets.control_plane.ids
  subnet_ids               = data.aws_subnets.data_plane.ids

  eks_managed_node_groups = {
    # This node group is for core addons such as CoreDNS
    default = {
      ami_type = "AL2023_x86_64_STANDARD"
      instance_types = [
        "m7a.xlarge",
        "m7i.xlarge",
      ]
  
      min_size     = 2
      max_size     = 3
      desired_size = 2
  
      node_repair_config = {
        enabled = true
      }
    }
    neuron = {
      ami_type       = "AL2023_x86_64_NEURON"
      instance_types = ["trn1n.32xlarge" ]

      min_size     = 2
      max_size     = 5
      desired_size = 2
    
      node_repair_config = {
        enabled = true
      }

      cloudinit_pre_nodeadm = [
        {
          content_type = "application/node.eks.aws"
          content      = <<-EOT
            ---
            apiVersion: node.eks.aws/v1alpha1
            kind: NodeConfig
            spec:
              instance:
                localStorage:
                  strategy: RAID0
          EOT
        }
      ]

      # Add security group rules on the node group security group to
      # allow EFA traffic
      enable_efa_support = true
      enable_efa_only    = true
      efa_indices        = [0]

      labels = {
        "vpc.amazonaws.com/efa.present" = "true"
        "aws.amazon.com/neuron.present" = "true"
      }
    
      taints = {
        # Ensure only Neuron workloads are scheduled on this node group
        neuron = {
          key    = "aws.amazon.com/neuron"
          value  = "true"
          effect = "NO_SCHEDULE"
        }
      }
    }
  }

  tags = module.tags.tags
}
